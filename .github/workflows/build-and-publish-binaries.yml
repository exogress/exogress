name: Build and Publish Binaries

on:
  release:
    types:
      - created

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv5te-unknown-linux-gnueabi
          - armv5te-unknown-linux-musleabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
        binary:
          - exogress
        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary:
              - exogress.exe
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} -p exogress

      - name: Compress action step
        uses: master-atul/tar-action@v1.0.2
        id: compress
        if: matrix.target != 'windows-latest'
        with:
          command: c
          cwd: ./target/${{ matrix.target }}/release/
          files:
            - ${{ matrix.binary }}
          outPath: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        if: matrix.target == 'windows-latest'
        with:
          filename: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.zip
          exclusions: '*.git* /*node_modules/* .editorconfig'

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_name: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

  publish-homebrew:
    runs-on: ubuntu-latest
    needs: build-and-publish
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-pckage-publisher-cargo-${{ hashFiles('pckage-publisher/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish homebrew package
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: cargo run -- --homebrew --version ${{ github.event.release.tag_name }} --message "Release new version"
        working-directory: package-publisher
