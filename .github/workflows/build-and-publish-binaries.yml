name: Build and Publish Binaries

on:
  release:
    types:
      - created

jobs:
  build-and-publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        target:
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
          - arm-unknown-linux-gnueabi
          - arm-unknown-linux-gnueabihf
          - arm-unknown-linux-musleabi
          - arm-unknown-linux-musleabihf
          - armv5te-unknown-linux-gnueabi
          - armv5te-unknown-linux-musleabi
          - armv7-unknown-linux-gnueabihf
          - armv7-unknown-linux-musleabihf
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu

# https://github.com/briansmith/ring/issues/562
#          - mips-unknown-linux-gnu
#          - mips-unknown-linux-musl
#          - mips64-unknown-linux-gnuabi64
#          - mips64el-unknown-linux-gnuabi64
#          - mipsel-unknown-linux-gnu
#          - mipsel-unknown-linux-musl

        include:
          - os: macOS-latest
            target: x86_64-apple-darwin
            env:
              SCCACHE_VERSION_ARCH: x86_64-apple-darwin
          - os: ubuntu-latest
            env:
              SCCACHE_VERSION_ARCH: x86_64-unknown-linux-musl
    env:
      RUST_BACKTRACE: 1
      RUSTC_WRAPPER: sccache

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          curl -L "$LINK/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-$SCCACHE_VERSION_ARCH.tar.gz" | tar xz
          echo "::add-path::$PWD/sccache-$SCCACHE_VERSION-$SCCACHE_VERSION_ARCH/"

      - run: 'echo "$SCCACHE_GCS_KEY" > ./gcs.json'
        shell: bash
        env:
          SSH_KEY: ${{secrets.SCCACHE_GCS_KEY}}

      - name: Start sccache
        env:
          SCCACHE_GCS_KEY_PATH: ./gcs.json
          SCCACHE_GCS_BUCKET: sccache-exogress
          SCCACHE_GCS_RW_MODE: READ_WRITE
          SCCACHE_IDLE_TIMEOUT: 0
        run: sccache --start-server

      - name: Sschache pre stats
        run: sccache --show-stats

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} -p exogress

      - name: Sschache post stats
        run: sccache --show-stats

      - name: Compress action step
        uses: master-atul/tar-action@v1.0.2
        id: compress
        with:
          command: c
          cwd: ./target/${{ matrix.target }}/release/
          files: |
            ./exogress
          outPath: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_name: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

      - name: Stop sccache
        run: sccache --stop-server

  publish-homebrew:
    runs-on: ubuntu-latest
    needs: build-and-publish
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Publish homebrew package
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: cargo run -- --homebrew --version ${{ github.event.release.tag_name }} --message "Release new version"
        working-directory: package-publisher
