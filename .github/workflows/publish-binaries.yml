name: Publish Binaries

on:
  release:
    types:
      - created

jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
        exclude:
          - os: macOS-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: x86_64-apple-darwin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release binary
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }} -p exogress

      - name: Show file
        run: ls -la ./target/${{ matrix.target }}/release/

      - name: Show file
        run: pwd
        
      - uses: actions/checkout@master
      - name: Compress action step
        uses: master-atul/tar-action@v1.0.2
        id: compress
        with:
          command: c
          cwd: ./target/${{ matrix.target }}/release/
          files: |
            ./exogress
          outPath: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz

      - name: Show file
        run: ls -la exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz

      - name: Upload release asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_name: exogress-${{ github.event.release.tag_name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip

