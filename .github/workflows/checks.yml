name: Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - command: fmt
            args: --all -- --check
          - command: clippy
            args: -- -D warnings
    env:
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: ${{ runner.os }}-${{ matrix.toolchain }}-${{ matrix.target }}-cargo-verify-${{ hashFiles('**/Cargo.lock') }}

      - name: Run cargo
        uses: actions-rs/cargo@v1
        with:
          command: ${{ matrix.command }}
          args: ${{ matrix.args }}

  native:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

#      - uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cargo/registry
#            ~/.cargo/git
#            target
#          key: ${{ runner.os }}-${{ matrix.toolchain }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install ${{ matrix.toolchain }} toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --target=${{ matrix.target }}

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target=${{ matrix.target }}
